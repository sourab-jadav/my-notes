alt+shift+j --opening the developer tools
cmd+apt+j

variable initialization        --let js='amazing';
if statement                if(js=='amazing')alert('jaavscript is fun')
            history
                es6-es2015(biggest update to the language ever)
                alfter es11 --every year new update
printing
console.log()
let person =true;
typeof              console.log(typeof true)

language='portugese'
operator precedence
x = y = 25 - 10 - 5; // x = y = 10, x = 10
console.log(typeof null);                           --object
javascript is dynamically typed 
**    i.e it is the value that has a type and variable just stores the type of value
typeof null                                         --bug in javascript
if the string does not have placeholders you can you backticks
**console.log(`Just a regular string...`);

**console.log('String with \n\
multiple \n\
lines');
--is equal to 
console.log(`String
multiple
lines`);

const job;              ----uncaught syntax error
--------------------------------------------------
const job=45;
job=65                  ---type error 
---------------------------------------------------
jonas                   ---uncaught reference error:jonas is not defined
---------------------------------------------------


7 premitive datatypes
Number,String,Boolean,Undefined,Null,Symbol,BigInt




operator precedence--------
exponentiation  right to left
multiplication  left to right
divistion       lefet to right
reminder        left to right
add
subtract        left to right
bitwise         left to right




taking decisions(control statements)

if (age >= 18) {
  console.log('Sarah can start driving license 🚗');
} else {
  const yearsLeft = 18 - age;
  console.log(`Sarah is too young. Wait another ${yearsLeft} years :)`);
}



type conversion(manual conversion) and type coercion(auto conversion)
const inputyear='1991'
// type conversion
const inputYear = '1991';
console.log(Number(inputYear), inputYear);
console.log(Number(inputYear) + 18);
console.log(Number('Jonas'));
console.log(typeof NaN);                    --o/p:number(but invalid one)
console.log(String(23), 23);



// type coercion
console.log('I am ' + 23 + ' years old'); console.log('I am ' + '23' + ' years old');
console.log('23' - '10' - 3); //10
console.log('23' / '2');11.5

let n = '1' + 1; // '11'
n = n - 1;
console.log(n);
2+3+4+'5'     //95
'10'-'4'-'3'-2+'5' //15


//truthy and falsy values
// 5 falsy values: 0, '', undefined, null, NaN
console.log(Boolean(0));
console.log(Boolean(undefined));
console.log(Boolean('Jonas'));--true;
console.log(Boolean({}));--true;
console.log(Boolean(''));


== loose equality operator '18'==18   --true;
=== strict equality operator '18'===18  --false;
const favourite = Number(prompt("What's your favourite number?"));
console.log(favourite);
console.log(typeof favourite);


//boolean operators
&& || !


//switch statement
switch(variable){
    case 'monday':
        console.log()
        break;
    case 'tuesday':
        console.log()
        beak;
    default:
        console.log('not a valid day')
}

expressions(something that has value) and statements
statements  -->basically we write our whole programs as a sequence of actions these actions are statemets
console.log(`I'm ${2037 - 1991} years old ${me}`);--here inside {} javascript expects expression

//the condition operator
const age = 23;
// age >= 18 ? console.log('I like to drink wine 🍷') : console.log('I like to drink water 💧');
const drink = age >= 18 ? 'wine 🍷' : 'water 💧';
console.log(drink);




//javascript releases

from 2016 ecmascript changes to an annual release cycle in order to ship less features per update



//how to use modern javacript today

during production  :use babel totranspile and polyfil your code (convertin back to es5 to ensure browser compbatiblity for all users)




=================02 fundamentals course=========

'use strict'  --for writing more secure code

---fucntions

function fruitProcessor(apples, oranges) {
  const juice = `Juice with ${apples} apples and ${oranges} oranges.`;
  return juice;
}


function without a name is anaenemouse function and acts as an expression

// Function declaration
function calcAge1(birthYeah) {
  return 2037 - birthYeah;
}
const age1 = calcAge1(1991);

// Function expression
const calcAge2 = function (birthYeah) {
  return 2037 - birthYeah;
}

//arrow function
const calcAge3 = birthYeah => 2037 - birthYeah;
const age3 = calcAge3(1991);
console.log(age3);
const yearsUntilRetirement = (birthYeah, firstName) => {
  const age = 2037 - birthYeah;
  const retirement = 65 - age;
  // return retirement;
  return `${firstName} retires in ${retirement} years`;
}
console.log(yearsUntilRetirement(1991, 'Jonas')); console.log(yearsUntilRetirement(1980, 'Bob'));


//arrays

const friends = ['Michael', 'Steven', 'Peter'];
const y = new Array(1991, 1984, 2008, 2020);
console.log(friends);
console.log(friends[0]);
console.log(friends[2]);
console.log(friends.length);
console.log(friends[friends.length - 1]);

------------------------------------------
const calcAge = function (birthYeah) {
  return 2037 - birthYeah;
}
const years = [1990, 1967, 2002, 2010, 2018];
console.log(years+10) --o/p: 1990,1967,2002,2010,201810
console.log(years-10) --o/p:NaN
console.log(calcAge(years))     ----o/p:NaN
const ages = [calcAge(years[0]), calcAge(years[1]), calcAge(years[years.length - 1])];
console.log(ages);
------------------------------------------
===array operations
const newLength = friends.push('Jay');//add at the last 
friends.unshift('John');   ---add at the beginning
friends.pop(); //delete Last
friends.shift(); // delete First
console.log(friends.indexOf('Steven')); --returns the index if prsent else returns -1
console.log(friends.includes('Steven')); --returns true or false




//objects
const jonasArray = [
  'Jonas',
  'Schmedtmann',
  2037 - 1991,
  'teacher',
  ['Michael', 'Peter', 'Steven']
];

const jonas = {
  firstName: 'Jonas',
  lastName: 'Schmedtmann',
  age: 2037 - 1991,
  job: 'teacher',
  friends: ['Michael', 'Peter', 'Steven']
};
console.log(jonas.lastName);
console.log(jonas['lastName']);
console.log(jonas['first' + nameKey]);
console.log(jonas['last' + nameKey]);
console.log(jonas.'last' + nameKey) --not work
const interestedIn = prompt('What do you want to know about Jonas? Choose between firstName, lastName, age, job, and friends');
if (jonas[interestedIn]) {
  console.log(jonas[interestedIn]);
} else {
  console.log('Wrong request! Choose between firstName, lastName, age, job, and friends');
}

jonas.location = 'Portugal';
**The values inside the const array can be change, it can add new items to const arrays but it cannot reference to a new array.
jonas['twitter'] = '@jonasschmedtman';
console.log(jonas);
// Object Methods

const jonas = {
  firstName: 'Jonas',
  lastName: 'Schmedtmann',
  birthYeah: 1991,
  job: 'teacher',
  friends: ['Michael', 'Peter', 'Steven'],
  hasDriversLicense: true,

  // calcAge: function (birthYeah) {
  //   return 2037 - birthYeah;
  // }

  // calcAge: function () {
  //   // console.log(this);
  //   return 2037 - this.birthYeah;
  // }

  calcAge: function () {
    this.age = 2037 - this.birthYeah;
    return this.age;
  },

  getSummary: function () {
    return `${this.firstName} is a ${this.calcAge()}-year old ${jonas.job}, and he has ${this.hasDriversLicense ? 'a' : 'no'} driver's license.`
  }
};

console.log(jonas.calcAge());
console.log(jonas.age);
console.log(jonas.age);
console.log(jonas.age);
for (let rep = 1; rep <= 30; rep++) {
  console.log(`Lifting weights repetition ${rep} 🏋️‍♀️`);
}
const types = [];
for (let i = 0; i < jonas.length; i++) {
  // Reading from jonas array
  console.log(jonas[i], typeof jonas[i]);

  // Filling types array
  // types[i] = typeof jonas[i];
  types.push(typeof jonas[i]);
}
// continue and break
console.log('--- ONLY STRINGS ---')
for (let i = 0; i < jonas.length; i++) {
  if (typeof jonas[i] !== 'string') continue;

  console.log(jonas[i], typeof jonas[i]);
}

console.log('--- BREAK WITH NUMBER ---')
for (let i = 0; i < jonas.length; i++) {
  if (typeof jonas[i] === 'number') break;

  console.log(jonas[i], typeof jonas[i]);
}



=====================================dom manupulation==================
dom is not a part of the javascript language
they are the part of the web api
web api's are libraries that browsers implement and we can acces them from javascript code
let secretNumber = Math.trunc(Math.random() * 20) + 1;
run---Math.random()

writing the value=====document.querySelector('.guess').value=23;
reading the value  ===document.querySelector('.guess').textContent=<any number of string>
--------------manupulating the css styles
document.querySelector('body').style.backgroundColor='#60b347'
document.querySelector('.number').style.width='30rem'

**for selecting multiple queries related to the same class         const btnsOpenModal = document.querySelectorAll('.show-modal');(it is nodelist)
for(let i=0;i<btnsOpenModal.length;i++)
    console.log(btnsOpenModal[i].textContent);
===summary of query selector
---writing===>.value
---reading===>.textContent
---css-style=>.style.<property>



=============================modal window
tips
first select the class elements and store them in an variables to use over over again


**to add a keylistener for keyboard
document.querySelector('<class name>').addEventListeners('click',<function>)  --for mouse
docuement.addEventListener('keydown',<function>)            --for keyboard          ---activates on pressing any key

**managing specific key pressed event
docuement.addEventListener('keydown',(e)=>{
    if(e.key==='Escape'&&!modal.classList.contains('hidden'))
    {
        closeModal();

    }
        })
