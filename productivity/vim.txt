shift+h shift+l  for switching between buffers
gr to see the references
gd  go to defination

space+f  fuzzy search
-------searching
after the search to go back to the previous cursor position use ctrl+o(backword) ctrl+i(forward)
[count]/search

space+F
ctrl+\ for the terminal
ctrl+o o for the enter

vim.cmd "<vimscript>"  ==>runs the vim script

vsplit
split --horizontaally


we are using packer.nvim as our plugin manager
o
ctrl+k
ctrl+j
ctrl+e remove the popoup
ce remove the word
ctrl+space


v% to select the text in the brackets in visual mode                                                     
o                           --moves the cursor to the opposite end of hightlight                         
gv                          --select the last visual selected area                                       
ctrl+v $+A(type anything and press esc) --to shift all the way to the end of the line (as multi cursors) 
ctrl+v i                    --as multi cursors                                                           
ctrl+v(select the text) +c +esc --as multi cursors                                                       
**visual mode can also be applied on text objects                                                        
>i}                             --indents the block of the code                                          
---when you perform > it performs indentation depending on the value of the shift width setting          
set shiftwidth?<cr>
set tabstop?<cr>(wdith of the tab)
set expandtab<cr>(inserts the appropriate number of spaces instead of tab characters)
set list(for tabs to visible)


**--------------------------------------indenting the lines go to the biggest line possible
type $,o A type |
:'<,'>center    --commands uses default of 80 columns to center with
:'<,'>center[ce] 40  --centers within the column of 40
:'<,'>le[5]
:'<,'>right[ri] 60
0 ctrl v j r #

**-----substitution in visual mode
:'<,'>s/usa/USA/<cr>


~ - Switch case
c - Change
d - Delete
y - Yank
r - Replace
x - Delete
I - Insert
A - Append
J - Join
u - Make lowercase
U - Make uppercase
> - Shift right
< - Shift left



cf<character>  

gr   produces the quick fix list showwig the references
gd   goes to the difination


> in the fileexplorer to jump over the folders

ctrl+o,i to move to prvious curson position


substitute command
use gc flag to do interactive replacement


=============to navigate in a large text===========
gk,gj,g^,g$,gm-middle





=======================default buffers command===========
:ls                             --list buffers
:b2                             --open buffer2
:b <buffername>
:b <ctrl+d>                     --list options
:bn                             --nex buffer 
:bp                             --previous buffer 
:<ctrl+p>                       --show previous command
:bf                             --first buffer 
:bl                             --last buffer
<ctrl+^>                        --toogle better current and previosu

states

active                          --loaded into the memory and displyed on window
hidden                          --loaded into the memory and not displayed on window
inactive                        --not loaded inoto meory
h +                             --+ indicates we have usaved changes and h represents it is hidden buffer
+                               --changes not saved


set hidden                      --allows to switch between buffers witout saving them
:badd <filename>(or):e <filename>--add file the current vim sessions
:bd3                            --delete the buffer3
:1,3bd<cr>                      --delete range of buffers
:2,$bd<cr>                      --delete all buffers from number 2
:%bd<cr>                        --delete all buffers  
:bufdo                          --execute command in every buffer(eg:-:bufdo set nu)
:bufdo set nu
:bufdo %s/#/@/g<cr>             --you will get an error as bufdo executed the command in the current window 
                                    and got an error when it tried to switch to the next buffer so it stoped
                                    error problem as set hidden option was not set

                                    --vim raises error when it tries to switch to the another buffer without saving the current buffer
                                    --set hidden allows to switch without saving and on closing the vim session if the chanes are not saved it raises an error

:bufdo %s/#/@/g | w             --this will perform substitution and write to the buffer and then switch to the next

or

:set hidden
:bufdo %s/#/@/g                 --no error
:wall                           --writes all buffers
:qall!                          --abanden the changes and quit
:E<cr>                          --open explorer


=============================window==================== 
:sp  or  <ctrl w s>             --horizontal split
:sp <filename>                  

:vs  or <ctrl w v>              --vertical split
:on=:only                       --close all windows except the current one


--------------open all the files in the seperate window
qr                      --recording macro in the r register
:sp
:bn
q<cr>--stop recording
3@r                                             --play  macro present in the r register three time
@@                                              --play the last macro
27,35normal @d                                  --supplying a range to a macro
.,$normal @d                                    --current line to the end of the file
^M                                              --refers to the escape key
"ap                                             --paste the contents of the macro                                                                                        
"ay$                                            --modify the macro and paste it back to the register
let @d ='macro'                                 --saving the macro in your .vimrc
let @t ='ITODO: (TYPE CTRL+V AND TYPE THE CHARACTER) j'

-----------------------------------------------------
ctrl w - --decarease the height of the window       |
ctrl w + --increase the height of the window        |
ctrl w > --increase the width of the window         |
ctrl w < --decrease the width of the window         |
ctrl w _ --maximize the height of the window        |
ctrl w | --maximuize the width of the window        |
ctrl w = --to make all the window equal size        |
----------------------------------------------------
ctrl w r --rotate the windows
ctrl w R --rotate in the opp direction

ctrl w H -- moves the current window to the far left
ctrl w L -- moves the current window to the far righr


ctrl w J -- moves the current window to the far bottom
ctrl w K -- moves the current window to the far top

ba                          -----to open all the buffers as widow
:windo %s/#/@/g | w

                                                                     
